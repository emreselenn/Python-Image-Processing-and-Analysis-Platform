# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'qt_design.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1130, 669)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.gridLayout_9 = QtWidgets.QGridLayout()
        self.gridLayout_9.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.groupBoxSource = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBoxSource.sizePolicy().hasHeightForWidth())
        self.groupBoxSource.setSizePolicy(sizePolicy)
        self.groupBoxSource.setMaximumSize(QtCore.QSize(16777215, 80))
        self.groupBoxSource.setObjectName("groupBoxSource")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.groupBoxSource)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.btnClearSource = QtWidgets.QToolButton(self.groupBoxSource)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("assets/ClearSource.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnClearSource.setIcon(icon)
        self.btnClearSource.setIconSize(QtCore.QSize(40, 40))
        self.btnClearSource.setObjectName("btnClearSource")
        self.gridLayout_5.addWidget(self.btnClearSource, 0, 1, 1, 1)
        self.btnOpenSource = QtWidgets.QToolButton(self.groupBoxSource)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("assets/openSource.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnOpenSource.setIcon(icon1)
        self.btnOpenSource.setIconSize(QtCore.QSize(40, 40))
        self.btnOpenSource.setObjectName("btnOpenSource")
        self.gridLayout_5.addWidget(self.btnOpenSource, 0, 0, 1, 1)
        self.btnExportSource = QtWidgets.QToolButton(self.groupBoxSource)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("assets/export as.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnExportSource.setIcon(icon2)
        self.btnExportSource.setIconSize(QtCore.QSize(40, 40))
        self.btnExportSource.setObjectName("btnExportSource")
        self.gridLayout_5.addWidget(self.btnExportSource, 0, 2, 1, 1)
        self.gridLayout_9.addWidget(self.groupBoxSource, 0, 0, 1, 1)
        self.groupBoxOutput = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBoxOutput.sizePolicy().hasHeightForWidth())
        self.groupBoxOutput.setSizePolicy(sizePolicy)
        self.groupBoxOutput.setMaximumSize(QtCore.QSize(16777215, 80))
        self.groupBoxOutput.setObjectName("groupBoxOutput")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.groupBoxOutput)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.btnSaveOutput = QtWidgets.QToolButton(self.groupBoxOutput)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("assets/SaveOutput.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnSaveOutput.setIcon(icon3)
        self.btnSaveOutput.setIconSize(QtCore.QSize(40, 40))
        self.btnSaveOutput.setCheckable(True)
        self.btnSaveOutput.setObjectName("btnSaveOutput")
        self.gridLayout_4.addWidget(self.btnSaveOutput, 0, 0, 1, 1)
        self.btnSaveAsOutput = QtWidgets.QToolButton(self.groupBoxOutput)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("assets/SaveAsOutput.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnSaveAsOutput.setIcon(icon4)
        self.btnSaveAsOutput.setIconSize(QtCore.QSize(40, 40))
        self.btnSaveAsOutput.setObjectName("btnSaveAsOutput")
        self.gridLayout_4.addWidget(self.btnSaveAsOutput, 0, 1, 1, 1)
        self.btnExportOutput = QtWidgets.QToolButton(self.groupBoxOutput)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("assets/ExportOutput.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnExportOutput.setIcon(icon5)
        self.btnExportOutput.setIconSize(QtCore.QSize(40, 40))
        self.btnExportOutput.setObjectName("btnExportOutput")
        self.gridLayout_4.addWidget(self.btnExportOutput, 0, 2, 1, 1)
        self.btnUndoOutput = QtWidgets.QToolButton(self.groupBoxOutput)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("assets/UndoOut.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnUndoOutput.setIcon(icon6)
        self.btnUndoOutput.setIconSize(QtCore.QSize(40, 40))
        self.btnUndoOutput.setObjectName("btnUndoOutput")
        self.gridLayout_4.addWidget(self.btnUndoOutput, 0, 4, 1, 1)
        self.btnClearOutput = QtWidgets.QToolButton(self.groupBoxOutput)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("assets/ClearOutput.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnClearOutput.setIcon(icon7)
        self.btnClearOutput.setIconSize(QtCore.QSize(40, 40))
        self.btnClearOutput.setObjectName("btnClearOutput")
        self.gridLayout_4.addWidget(self.btnClearOutput, 0, 3, 1, 1)
        self.btnRedoOutput = QtWidgets.QToolButton(self.groupBoxOutput)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("assets/RedoOut.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnRedoOutput.setIcon(icon8)
        self.btnRedoOutput.setIconSize(QtCore.QSize(40, 40))
        self.btnRedoOutput.setObjectName("btnRedoOutput")
        self.gridLayout_4.addWidget(self.btnRedoOutput, 0, 5, 1, 1)
        self.gridLayout_9.addWidget(self.groupBoxOutput, 0, 1, 1, 1)
        self.groupBoxConversion = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBoxConversion.sizePolicy().hasHeightForWidth())
        self.groupBoxConversion.setSizePolicy(sizePolicy)
        self.groupBoxConversion.setMaximumSize(QtCore.QSize(16777215, 80))
        self.groupBoxConversion.setObjectName("groupBoxConversion")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBoxConversion)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.btnRGB2HSV = QtWidgets.QToolButton(self.groupBoxConversion)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("assets/RGBtoHSV.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnRGB2HSV.setIcon(icon9)
        self.btnRGB2HSV.setIconSize(QtCore.QSize(40, 40))
        self.btnRGB2HSV.setObjectName("btnRGB2HSV")
        self.gridLayout_3.addWidget(self.btnRGB2HSV, 0, 1, 1, 1)
        self.btnRGB2Gray = QtWidgets.QToolButton(self.groupBoxConversion)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("assets/RGBtoGrey.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnRGB2Gray.setIcon(icon10)
        self.btnRGB2Gray.setIconSize(QtCore.QSize(40, 40))
        self.btnRGB2Gray.setObjectName("btnRGB2Gray")
        self.gridLayout_3.addWidget(self.btnRGB2Gray, 0, 0, 1, 1)
        self.gridLayout_9.addWidget(self.groupBoxConversion, 0, 2, 1, 1)
        self.groupBoxEdgeDetection_2 = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBoxEdgeDetection_2.sizePolicy().hasHeightForWidth())
        self.groupBoxEdgeDetection_2.setSizePolicy(sizePolicy)
        self.groupBoxEdgeDetection_2.setMaximumSize(QtCore.QSize(16777215, 80))
        self.groupBoxEdgeDetection_2.setObjectName("groupBoxEdgeDetection_2")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBoxEdgeDetection_2)
        self.gridLayout.setObjectName("gridLayout")
        self.btnMorphSnakes = QtWidgets.QToolButton(self.groupBoxEdgeDetection_2)
        self.btnMorphSnakes.setMinimumSize(QtCore.QSize(50, 50))
        self.btnMorphSnakes.setMaximumSize(QtCore.QSize(26, 60))
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("assets/M._Snake.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnMorphSnakes.setIcon(icon11)
        self.btnMorphSnakes.setIconSize(QtCore.QSize(50, 50))
        self.btnMorphSnakes.setObjectName("btnMorphSnakes")
        self.gridLayout.addWidget(self.btnMorphSnakes, 0, 2, 1, 1)
        self.btnMultiOtsu = QtWidgets.QToolButton(self.groupBoxEdgeDetection_2)
        self.btnMultiOtsu.setMinimumSize(QtCore.QSize(50, 50))
        self.btnMultiOtsu.setMaximumSize(QtCore.QSize(26, 60))
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("assets/Multi_Otsu.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnMultiOtsu.setIcon(icon12)
        self.btnMultiOtsu.setIconSize(QtCore.QSize(50, 50))
        self.btnMultiOtsu.setObjectName("btnMultiOtsu")
        self.gridLayout.addWidget(self.btnMultiOtsu, 0, 0, 1, 1)
        self.btnChanVese = QtWidgets.QToolButton(self.groupBoxEdgeDetection_2)
        self.btnChanVese.setMinimumSize(QtCore.QSize(50, 50))
        self.btnChanVese.setMaximumSize(QtCore.QSize(26, 60))
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("assets/Chan_Vese.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnChanVese.setIcon(icon13)
        self.btnChanVese.setIconSize(QtCore.QSize(50, 50))
        self.btnChanVese.setObjectName("btnChanVese")
        self.gridLayout.addWidget(self.btnChanVese, 0, 1, 1, 1)
        self.gridLayout_9.addWidget(self.groupBoxEdgeDetection_2, 0, 3, 1, 1)
        self.groupBoxEdgeDetection = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBoxEdgeDetection.sizePolicy().hasHeightForWidth())
        self.groupBoxEdgeDetection.setSizePolicy(sizePolicy)
        self.groupBoxEdgeDetection.setMaximumSize(QtCore.QSize(16777215, 80))
        self.groupBoxEdgeDetection.setObjectName("groupBoxEdgeDetection")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBoxEdgeDetection)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.btnEdgeScharr = QtWidgets.QToolButton(self.groupBoxEdgeDetection)
        self.btnEdgeScharr.setMinimumSize(QtCore.QSize(50, 50))
        self.btnEdgeScharr.setMaximumSize(QtCore.QSize(26, 60))
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("assets/Scharr.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnEdgeScharr.setIcon(icon14)
        self.btnEdgeScharr.setIconSize(QtCore.QSize(50, 50))
        self.btnEdgeScharr.setObjectName("btnEdgeScharr")
        self.gridLayout_2.addWidget(self.btnEdgeScharr, 0, 3, 1, 1)
        self.btnEdgePrewitt = QtWidgets.QToolButton(self.groupBoxEdgeDetection)
        self.btnEdgePrewitt.setMinimumSize(QtCore.QSize(50, 50))
        self.btnEdgePrewitt.setMaximumSize(QtCore.QSize(26, 60))
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("assets/Prewitt.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnEdgePrewitt.setIcon(icon15)
        self.btnEdgePrewitt.setIconSize(QtCore.QSize(50, 50))
        self.btnEdgePrewitt.setObjectName("btnEdgePrewitt")
        self.gridLayout_2.addWidget(self.btnEdgePrewitt, 0, 4, 1, 1)
        self.btnEdgeRoberts = QtWidgets.QToolButton(self.groupBoxEdgeDetection)
        self.btnEdgeRoberts.setMinimumSize(QtCore.QSize(50, 50))
        self.btnEdgeRoberts.setMaximumSize(QtCore.QSize(26, 60))
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("assets/Roberts.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnEdgeRoberts.setIcon(icon16)
        self.btnEdgeRoberts.setIconSize(QtCore.QSize(50, 50))
        self.btnEdgeRoberts.setObjectName("btnEdgeRoberts")
        self.gridLayout_2.addWidget(self.btnEdgeRoberts, 0, 0, 1, 1)
        self.btnEdgeSobel = QtWidgets.QToolButton(self.groupBoxEdgeDetection)
        self.btnEdgeSobel.setMinimumSize(QtCore.QSize(50, 50))
        self.btnEdgeSobel.setMaximumSize(QtCore.QSize(26, 60))
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap("assets/Sobel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnEdgeSobel.setIcon(icon17)
        self.btnEdgeSobel.setIconSize(QtCore.QSize(50, 50))
        self.btnEdgeSobel.setObjectName("btnEdgeSobel")
        self.gridLayout_2.addWidget(self.btnEdgeSobel, 0, 2, 1, 1)
        self.gridLayout_9.addWidget(self.groupBoxEdgeDetection, 0, 4, 1, 1)
        self.gridLayout_8.addLayout(self.gridLayout_9, 0, 0, 1, 2)
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_3.sizePolicy().hasHeightForWidth())
        self.groupBox_3.setSizePolicy(sizePolicy)
        self.groupBox_3.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.lblSourceImage = QtWidgets.QLabel(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lblSourceImage.sizePolicy().hasHeightForWidth())
        self.lblSourceImage.setSizePolicy(sizePolicy)
        self.lblSourceImage.setMinimumSize(QtCore.QSize(0, 0))
        self.lblSourceImage.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lblSourceImage.setText("")
        self.lblSourceImage.setObjectName("lblSourceImage")
        self.gridLayout_6.addWidget(self.lblSourceImage, 0, 0, 1, 1)
        self.gridLayout_8.addWidget(self.groupBox_3, 1, 0, 1, 1)
        self.groupBox_4 = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_4.sizePolicy().hasHeightForWidth())
        self.groupBox_4.setSizePolicy(sizePolicy)
        self.groupBox_4.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.groupBox_4.setObjectName("groupBox_4")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.lblOutputImage = QtWidgets.QLabel(self.groupBox_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lblOutputImage.sizePolicy().hasHeightForWidth())
        self.lblOutputImage.setSizePolicy(sizePolicy)
        self.lblOutputImage.setMinimumSize(QtCore.QSize(0, 0))
        self.lblOutputImage.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lblOutputImage.setText("")
        self.lblOutputImage.setObjectName("lblOutputImage")
        self.gridLayout_7.addWidget(self.lblOutputImage, 0, 0, 1, 1)
        self.gridLayout_8.addWidget(self.groupBox_4, 1, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1130, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuExport_As = QtWidgets.QMenu(self.menuFile)
        self.menuExport_As.setObjectName("menuExport_As")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuConversion = QtWidgets.QMenu(self.menubar)
        self.menuConversion.setObjectName("menuConversion")
        self.menuSegmentation = QtWidgets.QMenu(self.menubar)
        self.menuSegmentation.setObjectName("menuSegmentation")
        self.menuEdge_Detection = QtWidgets.QMenu(self.menubar)
        self.menuEdge_Detection.setObjectName("menuEdge_Detection")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionOpenSource = QtWidgets.QAction(MainWindow)
        self.actionOpenSource.setIcon(icon1)
        self.actionOpenSource.setShortcutVisibleInContextMenu(True)
        self.actionOpenSource.setObjectName("actionOpenSource")
        self.actionSaveOutput = QtWidgets.QAction(MainWindow)
        self.actionSaveOutput.setEnabled(False)
        self.actionSaveOutput.setIcon(icon3)
        self.actionSaveOutput.setObjectName("actionSaveOutput")
        self.actionSaveAsOutput = QtWidgets.QAction(MainWindow)
        self.actionSaveAsOutput.setEnabled(False)
        self.actionSaveAsOutput.setIcon(icon4)
        self.actionSaveAsOutput.setObjectName("actionSaveAsOutput")
        self.actionExit = QtWidgets.QAction(MainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap("assets/Exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExit.setIcon(icon18)
        self.actionExit.setShortcutVisibleInContextMenu(True)
        self.actionExit.setObjectName("actionExit")
        self.actionExportSource = QtWidgets.QAction(MainWindow)
        self.actionExportSource.setIcon(icon2)
        self.actionExportSource.setObjectName("actionExportSource")
        self.actionExportOutput = QtWidgets.QAction(MainWindow)
        self.actionExportOutput.setIcon(icon2)
        self.actionExportOutput.setObjectName("actionExportOutput")
        self.actionClearSource = QtWidgets.QAction(MainWindow)
        self.actionClearSource.setEnabled(False)
        self.actionClearSource.setIcon(icon)
        self.actionClearSource.setObjectName("actionClearSource")
        self.actionClearOutput = QtWidgets.QAction(MainWindow)
        self.actionClearOutput.setEnabled(False)
        self.actionClearOutput.setIcon(icon7)
        self.actionClearOutput.setObjectName("actionClearOutput")
        self.actionUndoOutput = QtWidgets.QAction(MainWindow)
        self.actionUndoOutput.setEnabled(False)
        self.actionUndoOutput.setIcon(icon6)
        self.actionUndoOutput.setObjectName("actionUndoOutput")
        self.actionRedoOutput = QtWidgets.QAction(MainWindow)
        self.actionRedoOutput.setEnabled(False)
        self.actionRedoOutput.setIcon(icon8)
        self.actionRedoOutput.setObjectName("actionRedoOutput")
        self.actionRGB2Gray = QtWidgets.QAction(MainWindow)
        self.actionRGB2Gray.setEnabled(False)
        self.actionRGB2Gray.setIcon(icon10)
        self.actionRGB2Gray.setObjectName("actionRGB2Gray")
        self.actionRGB2HSV = QtWidgets.QAction(MainWindow)
        self.actionRGB2HSV.setEnabled(False)
        self.actionRGB2HSV.setIcon(icon9)
        self.actionRGB2HSV.setObjectName("actionRGB2HSV")
        self.actionMultiOtsu = QtWidgets.QAction(MainWindow)
        self.actionMultiOtsu.setEnabled(False)
        self.actionMultiOtsu.setIcon(icon12)
        self.actionMultiOtsu.setObjectName("actionMultiOtsu")
        self.actionChanVese = QtWidgets.QAction(MainWindow)
        self.actionChanVese.setEnabled(False)
        self.actionChanVese.setIcon(icon13)
        self.actionChanVese.setObjectName("actionChanVese")
        self.actionMorphSnakes = QtWidgets.QAction(MainWindow)
        self.actionMorphSnakes.setEnabled(False)
        self.actionMorphSnakes.setIcon(icon11)
        self.actionMorphSnakes.setObjectName("actionMorphSnakes")
        self.actionEdgeRoberts = QtWidgets.QAction(MainWindow)
        self.actionEdgeRoberts.setEnabled(False)
        self.actionEdgeRoberts.setIcon(icon16)
        self.actionEdgeRoberts.setShortcutVisibleInContextMenu(True)
        self.actionEdgeRoberts.setObjectName("actionEdgeRoberts")
        self.actionEdgeSobel = QtWidgets.QAction(MainWindow)
        self.actionEdgeSobel.setEnabled(False)
        self.actionEdgeSobel.setIcon(icon17)
        self.actionEdgeSobel.setObjectName("actionEdgeSobel")
        self.actionEdgeScharr = QtWidgets.QAction(MainWindow)
        self.actionEdgeScharr.setEnabled(False)
        self.actionEdgeScharr.setIcon(icon14)
        self.actionEdgeScharr.setObjectName("actionEdgeScharr")
        self.actionEdgePrewitt = QtWidgets.QAction(MainWindow)
        self.actionEdgePrewitt.setEnabled(False)
        self.actionEdgePrewitt.setIcon(icon15)
        self.actionEdgePrewitt.setObjectName("actionEdgePrewitt")
        self.menuExport_As.addAction(self.actionExportSource)
        self.menuExport_As.addAction(self.actionExportOutput)
        self.menuFile.addAction(self.actionOpenSource)
        self.menuFile.addAction(self.actionSaveOutput)
        self.menuFile.addAction(self.actionSaveAsOutput)
        self.menuFile.addAction(self.menuExport_As.menuAction())
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionClearSource)
        self.menuEdit.addAction(self.actionClearOutput)
        self.menuEdit.addAction(self.actionUndoOutput)
        self.menuEdit.addAction(self.actionRedoOutput)
        self.menuConversion.addAction(self.actionRGB2Gray)
        self.menuConversion.addAction(self.actionRGB2HSV)
        self.menuSegmentation.addAction(self.actionMultiOtsu)
        self.menuSegmentation.addAction(self.actionChanVese)
        self.menuSegmentation.addAction(self.actionMorphSnakes)
        self.menuEdge_Detection.addAction(self.actionEdgeRoberts)
        self.menuEdge_Detection.addAction(self.actionEdgeSobel)
        self.menuEdge_Detection.addAction(self.actionEdgeScharr)
        self.menuEdge_Detection.addAction(self.actionEdgePrewitt)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuConversion.menuAction())
        self.menubar.addAction(self.menuSegmentation.menuAction())
        self.menubar.addAction(self.menuEdge_Detection.menuAction())
        self.toolBar.addAction(self.actionExit)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBoxSource.setTitle(_translate("MainWindow", "Source"))
        self.btnClearSource.setToolTip(_translate("MainWindow", "Clear the source image"))
        self.btnClearSource.setStatusTip(_translate("MainWindow", "Clear the source image"))
        self.btnClearSource.setText(_translate("MainWindow", "..."))
        self.btnOpenSource.setToolTip(_translate("MainWindow", "Open a .jpg or .png source image"))
        self.btnOpenSource.setStatusTip(_translate("MainWindow", "Open a .jpg or .png source image"))
        self.btnOpenSource.setText(_translate("MainWindow", "..."))
        self.btnExportSource.setToolTip(_translate("MainWindow", "Export source image format"))
        self.btnExportSource.setStatusTip(_translate("MainWindow", "Export source image format"))
        self.btnExportSource.setText(_translate("MainWindow", "..."))
        self.groupBoxOutput.setTitle(_translate("MainWindow", "Output"))
        self.btnSaveOutput.setToolTip(_translate("MainWindow", "Save the current output image"))
        self.btnSaveOutput.setStatusTip(_translate("MainWindow", "Save the current output image"))
        self.btnSaveOutput.setText(_translate("MainWindow", "..."))
        self.btnSaveAsOutput.setToolTip(_translate("MainWindow", "Save the output image with new name"))
        self.btnSaveAsOutput.setStatusTip(_translate("MainWindow", "Save the output image with new name"))
        self.btnSaveAsOutput.setText(_translate("MainWindow", "..."))
        self.btnExportOutput.setToolTip(_translate("MainWindow", "Export output image format"))
        self.btnExportOutput.setStatusTip(_translate("MainWindow", "Export output image format"))
        self.btnExportOutput.setText(_translate("MainWindow", "..."))
        self.btnUndoOutput.setToolTip(_translate("MainWindow", "Undo last operation on output"))
        self.btnUndoOutput.setStatusTip(_translate("MainWindow", "Undo last operation on output"))
        self.btnUndoOutput.setText(_translate("MainWindow", "..."))
        self.btnClearOutput.setText(_translate("MainWindow", "..."))
        self.btnRedoOutput.setToolTip(_translate("MainWindow", "Redo last undone operation"))
        self.btnRedoOutput.setStatusTip(_translate("MainWindow", "Redo last undone operation"))
        self.btnRedoOutput.setText(_translate("MainWindow", "..."))
        self.groupBoxConversion.setTitle(_translate("MainWindow", "Conversion"))
        self.btnRGB2HSV.setToolTip(_translate("MainWindow", "Convert source image to HSV color space"))
        self.btnRGB2HSV.setStatusTip(_translate("MainWindow", "Convert source image to HSV color space"))
        self.btnRGB2HSV.setText(_translate("MainWindow", "..."))
        self.btnRGB2Gray.setToolTip(_translate("MainWindow", "Convert source image to grayscale"))
        self.btnRGB2Gray.setStatusTip(_translate("MainWindow", "Convert source image to grayscale"))
        self.btnRGB2Gray.setText(_translate("MainWindow", "..."))
        self.groupBoxEdgeDetection_2.setTitle(_translate("MainWindow", "Segmentation"))
        self.btnMorphSnakes.setToolTip(_translate("MainWindow", "Segment image using morphological snakes."))
        self.btnMorphSnakes.setStatusTip(_translate("MainWindow", "Segments the image using morphological active contours (Morph Snakes)."))
        self.btnMorphSnakes.setText(_translate("MainWindow", "..."))
        self.btnMultiOtsu.setToolTip(_translate("MainWindow", "Segment image using multiple thresholding."))
        self.btnMultiOtsu.setStatusTip(_translate("MainWindow", "Segments the image into multiple classes using the Multi-Otsu method."))
        self.btnMultiOtsu.setText(_translate("MainWindow", "..."))
        self.btnChanVese.setToolTip(_translate("MainWindow", "Segment image using Chan-Vese algorithm."))
        self.btnChanVese.setStatusTip(_translate("MainWindow", "Segments the image using active contours without edges (Chan-Vese method)."))
        self.btnChanVese.setText(_translate("MainWindow", "..."))
        self.groupBoxEdgeDetection.setTitle(_translate("MainWindow", "Edge Detection"))
        self.btnEdgeScharr.setToolTip(_translate("MainWindow", "Apply Scharr edge detection"))
        self.btnEdgeScharr.setStatusTip(_translate("MainWindow", "Apply Scharr edge detection"))
        self.btnEdgeScharr.setText(_translate("MainWindow", "..."))
        self.btnEdgeScharr.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.btnEdgePrewitt.setToolTip(_translate("MainWindow", "Apply Prewitt edge detection"))
        self.btnEdgePrewitt.setStatusTip(_translate("MainWindow", "Apply Prewitt edge detection"))
        self.btnEdgePrewitt.setText(_translate("MainWindow", "..."))
        self.btnEdgePrewitt.setShortcut(_translate("MainWindow", "Ctrl+4"))
        self.btnEdgeRoberts.setToolTip(_translate("MainWindow", "Apply Roberts edge detection"))
        self.btnEdgeRoberts.setStatusTip(_translate("MainWindow", "Apply Roberts edge detection"))
        self.btnEdgeRoberts.setText(_translate("MainWindow", "..."))
        self.btnEdgeRoberts.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.btnEdgeSobel.setToolTip(_translate("MainWindow", "Apply Sobel edge detection"))
        self.btnEdgeSobel.setStatusTip(_translate("MainWindow", "Apply Sobel edge detection"))
        self.btnEdgeSobel.setText(_translate("MainWindow", "..."))
        self.btnEdgeSobel.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Source"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Output"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuExport_As.setTitle(_translate("MainWindow", "Export As"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuConversion.setTitle(_translate("MainWindow", "Conversion"))
        self.menuSegmentation.setTitle(_translate("MainWindow", "Segmentation"))
        self.menuEdge_Detection.setTitle(_translate("MainWindow", "Edge Detection"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionOpenSource.setText(_translate("MainWindow", "Open Source…"))
        self.actionOpenSource.setStatusTip(_translate("MainWindow", "Open a .jpg or .png source image"))
        self.actionOpenSource.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSaveOutput.setText(_translate("MainWindow", "Save Output…"))
        self.actionSaveOutput.setStatusTip(_translate("MainWindow", "Save current output image"))
        self.actionSaveOutput.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSaveAsOutput.setText(_translate("MainWindow", "Save As Output…"))
        self.actionSaveAsOutput.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setStatusTip(_translate("MainWindow", "Exit the application"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionExportSource.setText(_translate("MainWindow", "Source"))
        self.actionExportSource.setStatusTip(_translate("MainWindow", "Export source image format"))
        self.actionExportSource.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionExportOutput.setText(_translate("MainWindow", "Output"))
        self.actionExportOutput.setStatusTip(_translate("MainWindow", "Export output image format"))
        self.actionExportOutput.setShortcut(_translate("MainWindow", "Ctrl+Shift+E"))
        self.actionClearSource.setText(_translate("MainWindow", "Clear Source\n"
"\n"
""))
        self.actionClearSource.setStatusTip(_translate("MainWindow", "Clear the source image"))
        self.actionClearSource.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.actionClearOutput.setText(_translate("MainWindow", "Clear Output\n"
"\n"
""))
        self.actionClearOutput.setStatusTip(_translate("MainWindow", "Clear the output image"))
        self.actionClearOutput.setShortcut(_translate("MainWindow", "Ctrl+Shift+L"))
        self.actionUndoOutput.setText(_translate("MainWindow", "Undo Output\n"
"\n"
""))
        self.actionUndoOutput.setStatusTip(_translate("MainWindow", "Undo last operation on output"))
        self.actionUndoOutput.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedoOutput.setText(_translate("MainWindow", "Redo Output\n"
"\n"
""))
        self.actionRedoOutput.setStatusTip(_translate("MainWindow", "Redo last undone operation"))
        self.actionRedoOutput.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionRGB2Gray.setText(_translate("MainWindow", "RGB to Grayscale"))
        self.actionRGB2Gray.setStatusTip(_translate("MainWindow", "Convert source image to grayscale"))
        self.actionRGB2Gray.setShortcut(_translate("MainWindow", "Ctrl+G"))
        self.actionRGB2HSV.setText(_translate("MainWindow", "RGB to HSV"))
        self.actionRGB2HSV.setStatusTip(_translate("MainWindow", "Convert source image to HSV color space"))
        self.actionRGB2HSV.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.actionMultiOtsu.setText(_translate("MainWindow", "Multi-Otsu"))
        self.actionMultiOtsu.setStatusTip(_translate("MainWindow", "Apply multi-Otsu thresholding"))
        self.actionMultiOtsu.setShortcut(_translate("MainWindow", "Ctrl+M"))
        self.actionChanVese.setText(_translate("MainWindow", "Chan-Vese"))
        self.actionChanVese.setStatusTip(_translate("MainWindow", "Apply Chan-Vese segmentation"))
        self.actionChanVese.setShortcut(_translate("MainWindow", "Ctrl+Alt+V"))
        self.actionMorphSnakes.setText(_translate("MainWindow", "Morphological Snakes"))
        self.actionMorphSnakes.setStatusTip(_translate("MainWindow", "Apply morphological snakes segmentation"))
        self.actionMorphSnakes.setShortcut(_translate("MainWindow", "Ctrl+Alt+P"))
        self.actionEdgeRoberts.setText(_translate("MainWindow", "Roberts"))
        self.actionEdgeRoberts.setStatusTip(_translate("MainWindow", "Apply Roberts edge detection"))
        self.actionEdgeRoberts.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.actionEdgeSobel.setText(_translate("MainWindow", "Sobel"))
        self.actionEdgeSobel.setStatusTip(_translate("MainWindow", "Apply Sobel edge detection"))
        self.actionEdgeSobel.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.actionEdgeScharr.setText(_translate("MainWindow", "Scharr"))
        self.actionEdgeScharr.setStatusTip(_translate("MainWindow", "Apply Scharr edge detection"))
        self.actionEdgeScharr.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.actionEdgePrewitt.setText(_translate("MainWindow", "Prewitt"))
        self.actionEdgePrewitt.setStatusTip(_translate("MainWindow", "Apply Prewitt edge detection"))
        self.actionEdgePrewitt.setShortcut(_translate("MainWindow", "Ctrl+4"))
